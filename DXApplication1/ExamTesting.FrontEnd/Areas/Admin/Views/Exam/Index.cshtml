@using ExamTesting.Models

@{
    ViewData["Title"] = "Exam";
}

<h2 class="pb-4 text-center font-weight-light">Exam</h2>


<div id="form-container" class="row">

    <div class="col-2"></div>
    <div class="col">
        <div class="card p-5 shadow mb-3 bg-white rounded col">
            @(Html.DevExtreme().Form<ExamTesting.Models.Exam>()
                .ID("form")
                .ColCount(1)

                .Items(items => {
                    items.AddGroup()
                        .Caption("Exam Info")

                        .Items(groupItems =>
                        {

                            groupItems.AddSimpleFor(m => m.ExamName)
                            .Editor(e => e
                                .TextBox()
                                .ReadOnly(true)
                            );

                            groupItems.AddSimpleFor(m => m.SubjectId)
                            .Editor(e => e.SelectBox()
                            .DataSource(d => d.Mvc().Controller("Exam").LoadAction("GetSubjects").Key("SubjectId"))
                                .DisplayExpr("SubjectName")
                                .ValueExpr("SubjectId")
                                .ReadOnly(true)
                                );

                            groupItems.AddSimpleFor(m => m.StartDate)
                            .Editor(e => e
                                .DateBox()
                                .ReadOnly(true)
                                );

                            groupItems.AddSimpleFor(m => m.EndDate)
                            .Editor(e => e
                                .DateBox()
                                .ReadOnly(true)
                                );

                            groupItems.AddSimpleFor(m => m.ExamVersion)
                            .Editor(e => e
                                .TextBox()
                                .ReadOnly(true)
                            );

                        });
                })

                .FormData(Model)            
            )
            
        </div>

        <div class="card p-5 shadow mb-3 bg-white rounded col">
            @(Html.DevExtreme().Form<ExamTesting.Models.Choice>()
                    .ColCount(1)

                        .Items(items =>
                        {
                            items.AddGroup()
                            .Caption("Assign Questions")
                            .Template(@<text>
                                        <partial name="Questions" />
                            </text>);

                        })
             .FormData(Model)
            )
            <partial name="Questions" />
        </div>

        <div class="card p-5 shadow mb-3 bg-white rounded col">
            @(Html.DevExtreme().Form<ExamTesting.Models.Question>()
                    .ColCount(1)

                        .Items(items =>
                        {
                            items.AddGroup()
                            .Caption("Assign Users")
                            .Template(@<text>
                            </text>);

                        })
             .FormData(Model)
            )
        </div>

    </div>

    <div class="col-2"></div>     


</div>




<div class="row">
    <div class="col-2"></div>
    <div class="col row pb-5">
        <div class="text-left col">
            @(Html.DevExtreme().Button()
                .Type(ButtonType.Back).Icon("back").OnClick("Back")
            )
        </div>

        <div class="text-right col">
            @(Html.DevExtreme().Button()
                .Type(ButtonType.Default)
                .Text("Submit")
                .Icon("check")
                .OnClick("Next")
            )
        </div>
    </div>
    <div class="col-2"></div>
</div>



<script>
    function Back() {
        window.location.href = "@Url.Action("Index","Exams")";
    }

    function Next() {
        window.location.href = "@Url.Action("Next")";
    }
</script>