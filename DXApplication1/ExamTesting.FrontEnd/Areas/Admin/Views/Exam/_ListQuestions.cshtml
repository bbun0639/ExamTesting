@using ExamTesting.Models
        
@(Html.DevExtreme().DataGrid<ExamTesting.Models.QuestionExam>()
    .ID("gridContainer")
        .DataSource(d => d.Mvc()
        .Controller("Questions")
        .LoadAction("GetExam")
        .DeleteAction("DeleteExam")
        .Area("Admin")
        .Key("QuestionId")

        .LoadParams(new { id = Model.ExamCodeId })

        )


    .Editing(editing =>
    {
        editing.Mode(GridEditMode.Cell);
        editing.AllowDeleting(true).UseIcons(true);
    })

    .FilterRow(filterRow => filterRow.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
    .SearchPanel(searchPanel => searchPanel.Visible(true).Width(240).Placeholder("Search..."))

    .Paging(paging => paging.Enabled(true).PageSize(10))

    .ShowBorders(true)
    .HeaderFilter(headerFilter => headerFilter.Visible(true))
    .Selection(s => s.Mode(SelectionMode.Single))
    .HoverStateEnabled(true)


    .Columns(columns =>
    {
        columns.AddFor(m => m.QuestionId).Caption("Questions")
        .Lookup(lookup => lookup
            .DataSource(d => d.Mvc().Controller("Questions").LoadAction("Get").Key("QuestionId"))
            .ValueExpr("QuestionId")
            .DisplayExpr("QuestionStr")
        );


        columns.AddFor(m => m.Question.TopicId).Visible(true).Caption("Topic Name")
        .Lookup(lookup => lookup
            .DataSource(d => d.Mvc().Controller("Questions").LoadAction("GetTopicDropdown").Key("QuestionId"))
            .ValueExpr("TopicId")
            .DisplayExpr("TopicName")
            )
        .Alignment(HorizontalAlignment.Center);


        columns.AddFor(m => m.Question.QuestionType).Visible(true).Caption("Question Type")
        .Lookup(lookup => lookup
            .DataSource(Html.GetEnumSelectList<QuestionType>()
                .Select(l => new { Value = int.Parse(l.Value), Text = l.Text }))
                .ValueExpr("Value")
                .DisplayExpr("Text")
            )
        .Alignment(HorizontalAlignment.Center);


        columns.AddFor(m => m.Question.QuestionLevel).Visible(true).Caption("Question Level")
        .Lookup(lookup => lookup
            .DataSource(Html.GetEnumSelectList<EnumLevel>()
                    .Select(l => new { Value = int.Parse(l.Value), Text = l.Text }))
                    .ValueExpr("Value")
                    .DisplayExpr("Text")
                )
        .Alignment(HorizontalAlignment.Center);
       

         columns.AddFor(m => m.Question.QuestionPoint).Visible(true).Caption("Points")
            .Alignment(HorizontalAlignment.Center);

    })

)


