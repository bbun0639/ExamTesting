@using ExamTesting.Models
@model ExamTesting.Models.UserExamQuestion
@{
    ViewData["Title"] = "Test";
}

<div class="col mb-4 h4 font-weight-normal">
    Exam Test : @Model.UserExam.Exam.ExamName
</div>


<div class="col">

    @(Html.DevExtreme().DataGrid<ExamTesting.Models.UserExamQuestion>()
    .ID("gridContainer")
    .DataSource(d => d.Mvc()
        .Controller("Exam")
        .LoadAction("GetExamQuestion")
        .Area("User")
        .Key("QuestionId")
        .LoadParams(new { id = Model.UserExam.ExamId })
    )
    .Paging(paging => paging.Enabled(true).PageSize(10))


    .Columns(columns =>
    {
            columns.AddFor(m => m.IsComplete).Caption("Completed");

            columns.AddFor(m => m.Question.QuestionStr).Caption("Questions").Width(700)
            .CellTemplate(@<text>
                            <a href="/User/Exam/QuestionAnswer/<%= data.UserExamQuestionId %>"><%= data.Question.QuestionStr %></a>
                    </text>
                );


            columns.AddFor(m => m.Question.QuestionPoint).Visible(true).Caption("Point")
               .Alignment(HorizontalAlignment.Center);

            columns.AddFor(m => m.Question.QuestionLevel).Visible(true).Caption("Question Level").Visible(false)
            .Lookup(lookup => lookup
                .DataSource(Html.GetEnumSelectList<EnumLevel>()
                .Select(l => new { Value = int.Parse(l.Value), Text = l.Text }))
                .ValueExpr("Value")
                .DisplayExpr("Text"))
            .Alignment(HorizontalAlignment.Center);

        })


        .ShowBorders(true)
        .HoverStateEnabled(true)
        .OnCellClick("QuestionAnswer")
        )

    
        <div class="row pt-4">
            <div class="text-left col">
                @(Html.DevExtreme().Button()
                    .Icon("back")
                    .OnClick("Back")
                    
                )
            </div>
            <form asp-action="Test" asp-route-id="@Model.UserExam.ExamId">

                <div class="text-right col">
                    <input type="submit" class="btn btn-primary" value="Submit the Exam" />
                </div>

            </form>
        </div>
    

</div>


<script>
    function QuestionAnswer(e) {
        if (e.data.QuestionId != null) {
            window.location.href = "/User/Exam/QuestionAnswer/" + e.data.UserExamQuestionId;
        }
    }


    function selection_changed(selectedItems) {
        var data = selectedItems.selectedRowsData;
        document.getElementById("examQuestion").value = JSON.stringify(data);
    }


    function Back() {
        window.location.href = "@Url.Action("Details","Exam")/@Model.UserExam.ExamId";
    }
</script>