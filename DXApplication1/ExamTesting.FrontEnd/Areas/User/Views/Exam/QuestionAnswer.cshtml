@model ExamTesting.Models.UserExamQuestion
@{
    ViewData["Title"] = "QuestionAnswer";
}

<div class="h5 col p-4 bg-light">
    Question : <br />
    @Model.Question.QuestionStr
</div>
<br />

@(Html.DevExtreme().DataGrid<ExamTesting.Models.Choice>
    ()
    .ID("gridContainer")
    .ShowBorders(true)

    .Columns(columns =>
    {
        columns.AddFor(m => m.ChoiceStr).Caption("Choice");
    })

    .SelectedRowKeys((new Guid?[] { Model.SelectChoiceId }))

    .DataSource(d => d.Mvc()
    .LoadAction("GetChoice")

    .Key("ChoiceId")

    .LoadParams(new { id = Model.QuestionId })
    )

    .Selection(s => s.Mode(SelectionMode.Single))
    .OnSelectionChanged("selection_changed")
)


@*<form asp-action="Test" asp-route-id="@Model.UserExam.ExamId">

    <input type="text" name="questionAnswer" id="questionAnswer" style="width:900px;" />
    <br />

    <input type="submit" class="btn btn-primary" value="Submit" />

</form>*@


<div class="row pt-4">
    <div class="text-left col">
        @(Html.DevExtreme().Button()
            .Icon("back")
            .OnClick("Back")

        )
    </div>
    <form asp-action="Test" asp-route-id="@Model.UserExam.ExamId" asp-route-QuestionId="@Model.QuestionId">
        

        <div class="text-right col">
            <input type="submit" class="btn btn-primary" value="Submit" />
        </div>


        @*<div class="text-right col">
            @(Html.DevExtreme().Button()
                .Type(ButtonType.Default)
                .Text("Submit")
            )
        </div>*@

        <input type="text" name="questionAnswer" id="questionAnswer" style="width:900px;" />

    </form>
</div>



<script>
    function selection_changed(e) {
        var data = e.currentSelectedRowKeys;
        document.getElementById("questionAnswer").value = data;
    }

    function Back() {
        window.location.href = "@Url.Action("Start","Exam")/@Model.UserExam.ExamId";
    }
</script>