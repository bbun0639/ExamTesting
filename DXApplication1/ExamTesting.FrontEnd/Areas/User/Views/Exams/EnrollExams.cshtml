@model ExamTesting.Models.UserExam
        
    <div class="col">


        @(Html.DevExtreme().DataGrid<ExamTesting.Models.Exam>()
            .DataSource(d => d.Mvc()
            .Controller("Exams")
            .LoadAction("Get")
            .Area("User")
            .Key("ExamCodeId")
        )

            .ID("gridContainer")

            .Paging(paging => paging.Enabled(true).PageSize(10))

            .FilterRow(filterRow => filterRow
                .Visible(true)
                .ApplyFilter(GridApplyFilterMode.Auto)
            )
            .SearchPanel(searchPanel => searchPanel
                .Visible(true)
                .Width(240)
                .Placeholder("Search...")
            )
            .HeaderFilter(headerFilter => headerFilter.Visible(true))
            .HoverStateEnabled(true)
            .Selection(s => s.Mode(SelectionMode.Single))


            .Columns(columns =>
            {
                columns.AddFor(m => m.ExamCode).Caption("Code");

                columns.AddFor(m => m.ExamName).Caption("Exam");

                columns.AddFor(m => m.SubjectId).Caption("Subject")
                    .Lookup(lookup => lookup
                    .DataSource(d => d.Mvc().Controller("Exams").LoadAction("GetSubjects").Key("SubjectId"))
                    .DisplayExpr("SubjectName")
                    .ValueExpr("SubjectId")
                )
                .Alignment(HorizontalAlignment.Center);

                columns.AddFor(m => m.StartDate).Caption("Start Date")
                    .Alignment(HorizontalAlignment.Center);

                columns.AddFor(m => m.ExamDuration).Caption("Duration")
                    .Alignment(HorizontalAlignment.Center);

                columns.AddFor(m => m.ExamVersion).Caption("Version")
                    .Alignment(HorizontalAlignment.Center);
            })

            .ShowBorders(true)
            .Selection(s => s.Mode(SelectionMode.Multiple))
            .OnSelectionChanged("selection_changed")
            
        )

        <br />



        <div class="row pt-4">
            <div class="text-left col">
                @(Html.DevExtreme().Button()
                    .Type(ButtonType.Normal)
                    .Icon("back")
                    .OnClick("Back")
                )
            </div>

            <form asp-action="AddExams">
                <input type="hidden" name="examsString" id="examsString" rows="10" cols="100">

                <div class="text-right col">
                    @(Html.DevExtreme().Button()
                        .Type(ButtonType.Default)
                        .Text("Submit")
                        .Icon("check")
                        .UseSubmitBehavior(true)
                    )
                </div>

            </form>

        </div>

    </div>      
  


<script>
    function selection_changed(selectedItems) {
        var data = selectedItems.selectedRowsData;
        document.getElementById("examsString").value = JSON.stringify(data);
    }

    function Back() {
        window.location.href = "@Url.Action("Index","Exams")";
    }
</script>